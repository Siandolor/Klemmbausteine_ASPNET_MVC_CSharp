@model Klemmbausteine.Models.Product

@* ============================================================================
   === File: Details.cshtml
   === Description: Displays complete product details, including description, 
   ===              category, inventory, purchase and sales history, and 
   ===              profitability metrics. Allows editing of product price, 
   ===              creation of new purchase/sale entries, and stock management.
   ============================================================================ *@

@{
    ViewData["Title"] = "Product Details";

    // --- Calculate aggregated statistics for display
    var totalPurchases = Model.Purchases?.Sum(p => p.UnitPrice * p.Quantity) ?? 0m;
    var totalSales = Model.Sales?.Sum(s => s.UnitPrice * s.Quantity) ?? 0m;
    var profit = totalSales - totalPurchases;
}

<h1>@ViewData["Title"]</h1>

<div class="container mt-4">
    <h2 class="mb-3">Product Name: @Model.Name</h2>

    @* --- Display product image if available --- *@
    @if (!string.IsNullOrEmpty(Model.ImageLink))
    {
        <img src="@Model.ImageLink" alt="@Model.Name" class="img-thumbnail mb-3" style="max-width:200px;" />
    }

    @* --- Basic product information --- *@
    <div class="mb-2">
        <strong>Description:</strong>
        <p>@Model.Description</p>
    </div>

    <div class="mb-2">
        <strong>Category:</strong>
        <p>@Model.Category</p>
    </div>

    <div class="mb-3">
        <strong>Stock:</strong>
        <p>@Model.InStock</p>
    </div>

    <hr />

    @* --- Price editing form --- *@
    <h4>Edit Price</h4>
    <form asp-action="UpdatePrice" method="post" class="row g-2 align-items-center mb-4">
        <input type="hidden" name="Id" value="@Model.Id" />
        <div class="col-auto">
            <label for="NettoPrice" class="form-label">Net Price (€)</label>
        </div>
        <div class="col-auto">
            <input type="number" step="0.01" class="form-control" id="NettoPrice" name="NettoPrice" value="@Model.NettoPrice.ToString("F2")" />
        </div>
        <div class="col-auto">
            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </form>

    <hr />

    @* --- Summary of purchase and sales statistics --- *@
    <h4>Statistics</h4>
    <div class="row mb-4">
        <div class="col-md-3">
            <strong>Total Purchases:</strong>
            <span class="@(totalPurchases > 0 ? "text-danger" : "text-muted")">
                -@totalPurchases.ToString("C2")
            </span>
        </div>
        <div class="col-md-3">
            <strong>Total Sales:</strong>
            <span class="@(totalSales > 0 ? "text-primary" : "text-muted")">
                +@totalSales.ToString("C2")
            </span>
        </div>
        <div class="col-md-3">
            <strong>Profit/Loss:</strong>
            <span class="@(profit >= 0 ? "text-primary fw-bold" : "text-danger fw-bold")">
                @profit.ToString("C2")
            </span>
        </div>
    </div>

    <hr />

    @* --- Add new purchase order --- *@
    <h4>Add New Purchase</h4>
    <form asp-action="AddPurchase" method="post" class="row g-2 align-items-center mb-4">
        <input type="hidden" name="productId" value="@Model.Id" />
        <div class="col-md-3">
            <input type="number" name="quantity" class="form-control" placeholder="Quantity" min="1" required />
        </div>
        <div class="col-md-4">
            <input type="date" name="expectedDelivery" class="form-control" required />
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-success w-100">Save Purchase</button>
        </div>
    </form>

    @* --- Add new sale transaction --- *@
    <h4>Add New Sale</h4>
    <form asp-action="AddSale" method="post" class="row g-2 align-items-center mb-4">
        <input type="hidden" name="productId" value="@Model.Id" />
        <div class="col-md-2">
            <input type="number" step="0.01" name="unitPrice" class="form-control" placeholder="Unit Price (€)" required />
        </div>
        <div class="col-md-2">
            <input type="number" name="quantity" class="form-control" placeholder="Quantity" min="1" required />
        </div>
        <div class="col-md-3">
            <input type="text" name="buyerCompany" class="form-control" placeholder="Buyer Company" required />
        </div>
        <div class="col-md-3">
            <input type="date" name="saleDate" class="form-control" required />
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-warning w-100">Save Sale</button>
        </div>
    </form>

    @* --- Display list of all purchase orders --- *@
    <h4>All Purchases</h4>
    <table class="table table-striped table-hover align-middle mb-5">
        <thead class="table-light">
            <tr>
                <th>ID</th>
                <th>Quantity</th>
                <th>Unit Price (€)</th>
                <th>Expected Delivery</th>
                <th>Actual Delivery</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Purchases != null && Model.Purchases.Any())
            {
                foreach (var purchase in Model.Purchases.OrderByDescending(p => p.ExpectedDelivery))
                {
                    <tr>
                        <td>@purchase.Id</td>
                        <td>@purchase.Quantity.ToString("N0")</td>
                        <td>@purchase.UnitPrice.ToString("N2")</td>
                        <td>@purchase.ExpectedDelivery.ToShortDateString()</td>
                        <td>@(purchase.ActualDelivery?.ToShortDateString() ?? "-")</td>
                        <td>
                            @if (purchase.Delivered)
                            {
                                <span class="badge bg-success">Delivered</span>
                            }
                            else
                            {
                                <span class="badge bg-warning text-dark">Pending</span>
                            }
                        </td>
                        <td>
                            @if (!purchase.Delivered)
                            {
                                <form asp-action="MarkDelivered" method="post" class="d-inline">
                                    <input type="hidden" name="id" value="@purchase.Id" />
                                    <button type="submit" class="btn btn-sm btn-primary">Mark as Delivered</button>
                                </form>
                                <form asp-action="DeletePurchase" method="post" class="d-inline ms-1">
                                    <input type="hidden" name="id" value="@purchase.Id" />
                                    <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                                </form>
                            }
                            else
                            {
                                <span class="text-muted">–</span>
                            }
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="7" class="text-center text-muted">No purchases recorded</td></tr>
            }
        </tbody>
    </table>

    <hr />

    @* --- Display list of all sales transactions --- *@
    <h4>All Sales</h4>
    <table class="table table-striped table-hover align-middle">
        <thead class="table-light">
            <tr>
                <th>ID</th>
                <th>Buyer Company</th>
                <th>Quantity</th>
                <th>Unit Price (€)</th>
                <th>Total (€)</th>
                <th>Date</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Sales != null && Model.Sales.Any())
            {
                foreach (var sale in Model.Sales.OrderByDescending(s => s.SaleDate))
                {
                    var totalprice = sale.UnitPrice * sale.Quantity;
                    <tr>
                        <td>@sale.Id</td>
                        <td>@sale.BuyerCompany</td>
                        <td>@sale.Quantity.ToString("N0")</td>
                        <td>@sale.UnitPrice.ToString("N2")</td>
                        <td>@totalprice.ToString("N2")</td>
                        <td>@sale.SaleDate.ToShortDateString()</td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="6" class="text-center text-muted">No sales recorded</td></tr>
            }
        </tbody>
    </table>

    @* --- Navigation back to product overview --- *@
    <div class="mt-4">
        <a asp-action="Index" class="btn btn-secondary">Back to Product Overview</a>
    </div>
</div>
